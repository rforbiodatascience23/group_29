---
title: "04_augment"
format: html
editor: visual
---

## Loading packages and data

```{r}
#| label: 03-01
#| message: false

library(tidyverse)
```

```{r}
#| label: 03-02

TCGA_clean <- read_tsv("../data/02_dat_clean.tsv", show_col_types = FALSE)
```

## 

## Adding age at last follow-up and disease duration

```{r}
#| label: 03-03

TCGA_aug <- TCGA_clean |> 
  mutate(
    # Calculate age at last follow-up in years
    age_at_last_followup_years = (ifelse(vital_status == "Alive", last_contact_days_to, death_days_to) - birth_days_to) / 365.25,
    
    # Calculate disease duration in years including death
    disease_duration_years = (ifelse(vital_status == "Alive", last_contact_days_to / 365.25, death_days_to / 365.25))
  ) |> 
  mutate(
    # Round the calculated durations to two decimal places
    age_at_last_followup_years = round(age_at_last_followup_years, 2),
    disease_duration_years = round(disease_duration_years, 2)
  )

```

## Adding categorical age groups

```{r}
#| label: 03-04

# Create categorical age groups
TCGA_aug <- TCGA_aug |> 
  mutate(age_group_diagnosis = case_when(
    age_diagnosis < 18 ~ "<18",
    age_diagnosis >= 18 & age_diagnosis < 30 ~ "18-29",
    age_diagnosis >= 30 & age_diagnosis < 40 ~ "30-39",
    age_diagnosis >= 40 & age_diagnosis < 50 ~ "40-49",
    age_diagnosis >= 50 & age_diagnosis < 60 ~ "50-59",
    age_diagnosis >= 60 & age_diagnosis < 70 ~ "60-69",
    age_diagnosis >= 70 & age_diagnosis < 80 ~ "70-79",
    TRUE ~ ">=80"
  ))

```

## Adding stage groups

```{r}
#| label: 03-05

# Create broader groupings for pathologic stages, considering clinical_stage if pathologic_stage is not usable
# Create a function to map stages
map_stage <- function(pathologic_stage, clinical_stage) {
  if (pathologic_stage %in% c("Stage I", "Stage IA", "Stage IB", "IS", "I/II NOS")) {
    return("Stage 1")
  } else if (pathologic_stage %in% c("Stage II", "Stage IIA", "Stage IIB", "Stage IIC")) {
    return("Stage 2")
  } else if (pathologic_stage %in% c("Stage III", "Stage IIIA", "Stage IIIB", "Stage IIIC")) {
    return("Stage 3")
  } else if (pathologic_stage %in% c("Stage IV", "Stage IVA", "Stage IVB", "Stage IVC")) {
    return("Stage 4")
  } else if (pathologic_stage %in% c("[Discrepancy]", "[Not Applicable]", "[Not Available]", "[Unknown]")) {
    if (clinical_stage %in% c("I","Stage I", "Stage IA", "Stage IA1", "Stage IA2", "Stage IB", "Stage IB1", "Stage IB2", "Stage IC")) {
      return("Stage 1")
    } else if (clinical_stage %in% c("Stage II", "Stage IIA", "Stage IIA1", "Stage IIA2", "Stage IIB", "Stage IIC")) {
      return("Stage 2")
    } else if (clinical_stage %in% c("III", "IIIA", "IIIB", "IIIC", "IIIC1", "IIIC2")) {
      return("Stage 3")
    } else if (clinical_stage %in% c("IV", "IVA", "IVB", "IVC")) {
      return("Stage 4")
    } 
  }
  # If none of the conditions match, return the original pathologic_stage
  return("other")
}

# Apply the mapping function to create the stage_group variable
TCGA_aug <- TCGA_aug |> 
  mutate(stage_group = map2_chr(pathologic_stage, clinical_stage, map_stage))
```

## Saving data

```{r}
#| label: 03-06

write_tsv(TCGA_aug, "../data/03_dat_aug.tsv")
```
